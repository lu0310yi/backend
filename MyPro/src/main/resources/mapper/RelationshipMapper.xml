<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mypro.mapper.RelationshipMapper" >
  <resultMap id="BaseResultMap" type="com.mypro.beans.Relationship" >
    <constructor >
      <arg column="subject_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="object_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="status" jdbcType="CHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    subject_id, object_id, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mypro.beans.RelationshipExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from relationship
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.mypro.beans.RelationshipExample" >
    delete from relationship
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mypro.beans.Relationship" >
    insert into relationship (subject_id, object_id, status
      )
    values (#{subjectId,jdbcType=BIGINT}, #{objectId,jdbcType=BIGINT}, #{status,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mypro.beans.Relationship" >
    insert into relationship
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="subjectId != null" >
        subject_id,
      </if>
      <if test="objectId != null" >
        object_id,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="subjectId != null" >
        #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="objectId != null" >
        #{objectId,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mypro.beans.RelationshipExample" resultType="java.lang.Integer" >
    select count(*) from relationship
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectObjIdBySubId" resultType="java.lang.Long">
    select object_id from relationship where subject_id=#{userId} and status in
    <foreach collection="status" item="item" index="index" open="(" separator="," close=")">
    #{item}
  </foreach>
  </select>
  <select id="selectSubIdByObjId" resultType="java.lang.Long">
    select subject_id from relationship where object_id=#{userId} and status in ('1','0')
  </select>
  <select id="selectStatus" resultType="java.lang.String">
    select status from relationship where subject_id=#{userId} and object_id=#{friendId}
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update relationship
    <set >
      <if test="record.subjectId != null" >
        subject_id = #{record.subjectId,jdbcType=BIGINT},
      </if>
      <if test="record.objectId != null" >
        object_id = #{record.objectId,jdbcType=BIGINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update relationship
    set subject_id = #{record.subjectId,jdbcType=BIGINT},
      object_id = #{record.objectId,jdbcType=BIGINT},
      status = #{record.status,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>